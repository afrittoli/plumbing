# Copyright 2020 The Tekton Authors
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: tekton-cd
spec:
  serviceAccountName: tektoncd
  triggers:
    - name: configmaps
      interceptors:
        - cel:
            filter: >-
              'trigger-template' in body &&
              body['trigger-template'] == 'configmap'
      bindings:
        - ref: deploy-target-details
        - ref: deploy-source-git
        - ref: configmap-details
      template:
        name: deploy-configmap
    - name: folders
      interceptors:
        - cel:
            filter: >-
              'trigger-template' in body &&
              body['trigger-template'] == 'folders'
      bindings:
        - ref: deploy-target-details
        - ref: deploy-source-git
        - ref: folder-details
      template:
        name: deploy-from-folder
    - name: helm
      interceptors:
        - cel:
            filter: >-
              'trigger-template' in body &&
              body['trigger-template'] == 'helm'
      bindings:
        - ref: deploy-target-details
        - ref: helm-details
      template:
        name: deploy-helm-chart
    - name: tekton
      interceptors:
        - cel:
            filter: >-
              'trigger-template' in body &&
              body['trigger-template'] == 'tekton'
      bindings:
        - ref: deploy-target-details
        - ref: tekton-details
        - ref: plumbing-git
      template:
        name: deploy-tekton-release
    - name: cleanup
      interceptors:
        - cel:
            filter: >-
              'trigger-template' in body &&
              body['trigger-template'] == 'cleanup'
      bindings:
        - ref: deploy-target-details
        - ref: cleanup-details
      template:
        name: cleanup-runs
---
apiVersion: triggers.tekton.dev/v1alpha1
kind: EventListener
metadata:
  name: tekton-events
spec:
  serviceAccountName: tektoncd
  triggers:
    - name: configmap-deploy-successful-slack
      interceptors:
        - cel:
            filter: >-
              header.match('ce-type', 'dev.tekton.event.taskrun.successful.v1') &&
              body.taskRun.metadata.labels['triggers.tekton.dev/eventlistener'] == 'tekton-cd' &&
              body.taskRun.metadata.labels['triggers.tekton.dev/trigger'] == 'configmaps'
      bindings:
      - ref: configmap-deploy-details
      template:
        name: hello-world